"""Init DB

Revision ID: 2ff13581696f
Revises: 
Create Date: 2024-02-17 18:52:40.021831

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = '2ff13581696f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

CHOICES_STATES = [
    ("pending", "Pendiente"),
    ("canceled", "Cancelado"),
    ("accepted", "Aceptado"),
    ("in_progress_entrada", "En progreso. Entrada planta"),
    ("in_progress_balanza_in", "En progreso. Balanza ingreso"),
    ("in_progress_balanza_out", "En progreso. Balanza egreso"),
    ("finished", "Finalizado"),
]

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('empresas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('RS', sa.String(length=255), nullable=False),
    sa.Column('CUIT', sa.String(length=255), nullable=False),
    sa.Column('direccion', sa.String(length=255), nullable=False),
    sa.Column('localidad', sa.String(length=255), nullable=False),
    sa.Column('provincia', sa.String(length=255), nullable=False),
    sa.Column('pais', sa.String(length=255), nullable=False),
    sa.Column('telefono', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('choferes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('rfid_uid', sa.BigInteger(), nullable=True),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('apellido', sa.String(length=255), nullable=False),
    sa.Column('dni', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=True),
    sa.Column('habilitado', sa.Boolean(), nullable=False),
    sa.Column('created_on', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('silos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('producto_id', sa.Integer(), nullable=True),
    sa.Column('capacidad', sa.Integer(), nullable=False),
    sa.Column('utilizado', sa.Integer(), nullable=False),
    sa.Column('estado', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehiculos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patente', sa.String(), nullable=False),
    sa.Column('seguro', sa.String(length=255), nullable=False),
    sa.Column('modelo', sa.String(length=255), nullable=False),
    sa.Column('aÃ±o', sa.Integer(), nullable=False),
    sa.Column('marca', sa.String(length=255), nullable=False),
    sa.Column('habilitado', sa.Boolean(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patente')
    )
    op.create_table('turnos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state', sqlalchemy_utils.types.choice.ChoiceType(CHOICES_STATES), nullable=True),
    sa.Column('created_on', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('fecha', sa.TIMESTAMP(), nullable=False),
    sa.Column('cantidad_estimada', sa.Integer(), nullable=False),
    sa.Column('chofer_id', sa.Integer(), nullable=True),
    sa.Column('empresa_id', sa.Integer(), nullable=True),
    sa.Column('producto_id', sa.Integer(), nullable=True),
    sa.Column('vehiculo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chofer_id'], ['choferes.id'], ),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresas.id'], ),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], ),
    sa.ForeignKeyConstraint(['vehiculo_id'], ['vehiculos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pesadas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fecha_hora_planta_in', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('fecha_hora_balanza_in', sa.TIMESTAMP(), nullable=True),
    sa.Column('fecha_hora_balanza_out', sa.TIMESTAMP(), nullable=True),
    sa.Column('peso_bruto_in', sa.DECIMAL(precision=9, scale=2), nullable=True),
    sa.Column('peso_bruto_out', sa.DECIMAL(precision=9, scale=2), nullable=True),
    sa.Column('turno_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['turno_id'], ['turnos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('turno_id', name='unique_pesada_per_turno')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pesadas')
    op.drop_table('turnos')
    op.drop_table('vehiculos')
    op.drop_table('silos')
    op.drop_table('choferes')
    op.drop_table('productos')
    op.drop_table('empresas')
    # ### end Alembic commands ###
